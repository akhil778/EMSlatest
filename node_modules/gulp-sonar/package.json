{
  "name": "gulp-sonar",
  "description": "Sonar runner for gulp.",
  "version": "3.0.0",
  "homepage": "https://github.com/carsdotcom/gulp-sonar",
  "author": {
    "name": "Mac Heller-Ogden",
    "email": "mac@machellerogden.com"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com/carsdotcom/gulp-sonar.git"
  },
  "bugs": {
    "url": "https://github.com/carsdotcom/gulp-sonar/issues"
  },
  "licenses": [
    {
      "type": "Apache 2.0",
      "url": "https://github.com/carsdotcom/gulp-sonar/blob/master/LICENSE.txt"
    }
  ],
  "engines": {
    "node": ">= 0.10"
  },
  "devDependencies": {
    "gulp": "^3.9.0"
  },
  "peerDependencies": {},
  "keywords": [
    "gulpplugin",
    "sonar",
    "sonar-runner"
  ],
  "dependencies": {
    "gulp-util": "3.0.1",
    "through2": "0.6.3",
    "properties": "1.2.1"
  },
  "readme": "# gulp-sonar\n\nSonar for gulp\n\n## Install\n\n```\nnpm install --save-dev gulp-sonar\n```\n\n## Usage Example\n\n```js\ngulp.task('sonar', function () {\n    var options = {\n        sonar: {\n            host: {\n                url: 'http://localhost:9000'\n            },\n            jdbc: {\n                url: 'jdbc:mysql://localhost:3306/sonar',\n                username: 'sonar',\n                password: 'sonar'\n            },\n            projectKey: 'sonar:my-project:1.0.0',\n            projectName: 'My Project',\n            projectVersion: '1.0.0',\n            // comma-delimited string of source directories\n            sources: 'src/app/js,src/libs/js',\n            language: 'js',\n            sourceEncoding: 'UTF-8',\n            javascript: {\n                lcov: {\n                    reportPath: 'test/sonar_report/lcov.info'\n                }\n            },\n            exec: {\n                // All these properties will be send to the child_process.exec method (see: https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback )\n                // Increase the amount of data allowed on stdout or stderr (if this value is exceeded then the child process is killed, and the gulp-sonar will fail).\n                maxBuffer : 1024*1024\n            }\n        }\n    };\n\n    // gulp source doesn't matter, all files are referenced in options object above\n    return gulp.src('thisFileDoesNotExist.js', { read: false })\n        .pipe(sonar(options))\n        .on('error', util.log);\n});\n```\n\n## Credit\n\nInspired by [grunt-sonar-runner](https://github.com/skhatri/grunt-sonar-runner) by [Suresh Khatri](https://github.com/skhatri).\n",
  "readmeFilename": "README.md",
  "_id": "gulp-sonar@3.0.0",
  "_from": "gulp-sonar@~3.0.0"
}
